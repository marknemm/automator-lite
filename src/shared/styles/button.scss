@use "variables" as *;

.spark-button {
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  border: none;
  border-radius: var(--spark-field-border-radius);
  background: none;
  color: inherit;
  cursor: pointer;
  transition:
    color 0.3s,
    background 0.3s,
    background-color 0.3s;

  &[raised] {
    box-shadow: var(--spark-shadow);

    &:hover {
      box-shadow: var(--spark-shadow-heavy);
    }
  }

  &[outline] {
    border: 1px solid var(--spark-border-color);
  }

  &[shape="round"] {
    border-radius: 50%;
  }

  /// Mixin to generate color button colors with hover and non-raised states
  /// @param {string} $color - The color name (e.g., primary, secondary)
  @mixin button-color($color) {
    &[color="#{$color}"] {
      &:not([raised]) {
        background-color: inherit;
        color: var(--spark-#{$color});

        &:hover {
          background-color: var(--spark-#{$color}-faintest);
        }
      }

      &[raised] {
        &:hover {
          background-color: var(--spark-#{$color}-dim);
        }
      }

      &:active,
      &:active:focus {
        background-color: var(--spark-#{$color});
        color: var(--spark-#{$color}-inverted);
      }
    }
  }

  @include button-color(primary);
  @include button-color(secondary);
  @include button-color(tertiary);
  @include button-color(info);
  @include button-color(success);
  @include button-color(warning);
  @include button-color(danger);

  &[icon] {
    width: auto;
    height: var(--spark-icon-button-size, 30px);
    aspect-ratio: 1 / 1;
    font-size: calc(var(--spark-icon-button-size, 30px) * 0.55);
    line-height: 1;
    border-radius: 50%;

    &[shape="rectangle"] {
      border-radius: var(--spark-field-border-radius);
    }

    &:before {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      font-size: inherit;
      line-height: inherit;
    }
  }

  &[icon="close"] {
    font-size: calc(var(--spark-icon-button-size, 30px) * 0.45);
  }

  &[icon="delete"] {
    font-size: calc(var(--spark-icon-button-size, 30px) * 0.5);
  }

  &[icon="play"] {
    font-size: calc(var(--spark-icon-button-size, 30px) * 0.6);
  }
}
